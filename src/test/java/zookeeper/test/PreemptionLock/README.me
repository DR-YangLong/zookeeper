## 测试说明
zk新建节点
> /sourcelock/preemption

作为抢锁式创建目录的父节点。

新建节点
> /sourcelock/sourcenum "2"

最为资源存储节点，真实的一般为数据库或存储系统，节点的值就是资源总数。
然后运行** 多个 ResourcePreemptionLock**main方法查看效果。

## 原理
起N个线程同时在**/sourcelock/preemption**下新建临时节点**lock**，成功建立的视为抢到资源的独占权限，可以操作资源，
没有建立成功的视为没有抢到锁，只能阻塞等待前一个抢到锁的线程释放锁（删除临时节点），然后再和其他的线程一起竞争抢锁。
操作资源即是从资源节点读取资源数，减去1，然后再将减去后的资源数值set回资源节点。

## 已知BUG
由于是异步监听的watcher通知，所以可能线程还没退出其他的节点就又抢到锁并执行完成了，会收到重复的锁释放通知，
可以简单的判断下自己业务是否处理完，如果处理完则不做任何操作，也可以在自己抢到锁后注销掉watcher。